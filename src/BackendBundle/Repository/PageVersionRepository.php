<?php

namespace BackendBundle\Repository;

use BackendBundle\Entity\Page;
use Doctrine\ORM\EntityRepository;

/**
 * PageVersionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageVersionRepository extends EntityRepository
{
    public function latestVersion($page_id)
    {
        $highest_id = $this->createQueryBuilder('pv')
            ->select('MAX(pv.versionNo)')
            ->where('pv.page = :page')
            ->setParameter('page', $page_id)
            ->getQuery()
            ->getSingleScalarResult();

        return $highest_id;

    }

    public function listVersion($page_id)
    {
        $list_version = $this->createQueryBuilder('pv')
            ->where('pv.page = :page')
            ->setParameter('page', $page_id)
            ->add('orderBy', 'pv.versionNo DESC')
            ->setMaxResults('10')
            ->getQuery()
            ->getResult();

        return $list_version;

    }

    public function getPageVersion($page_id, $version){
        $list_version = $this->createQueryBuilder('pv')
            ->where('pv.page = :page')
            ->andwhere('pv.versionNo = :version_no')
            ->setParameter('page', $page_id)
            ->setParameter('version_no', $version)
            ->getQuery()
            ->getSingleResult();

        return $list_version;
    }

    public function getCopiaCarbon($page_id){
        $copia_carbon = $this->createQueryBuilder('pv')
            ->where('pv.page = :page')
            ->andwhere('pv.versionNo = :version_no')
            ->setParameter('page', $page_id)
            ->setParameter('version_no', 1)
            ->getQuery()
            ->getSingleResult();

        $result = (isset($copia_carbon)) ? $copia_carbon : null;

        return $result;
    }

    public function getBaseQB($onlyActive = true)
    {
        return $this->createQueryBuilder('pv')
            ->add('orderBy', 'pv.versionNo DESC');
    }
}
