<?php

namespace BackendBundle\Repository;

use BackendBundle\Entity\Page;
use Doctrine\ORM\EntityRepository;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends EntityRepository {

    public function inactiveBreakingNews($page_id) {
        $qb = $this->createQueryBuilder('u');
        $q = $qb->update()
                ->set('u.isBreaking', 0)
                ->where($qb->expr()->not($qb->expr()->eq('u.id', '?1')))
                ->setParameter(1, $page_id)
                ->getQuery();
        $p = $q->execute();

        return $p;
    }
    
    public function  findByAuthorId($author_id){
        $result = $this->createQueryBuilder('p')
                ->select('p')
                ->innerJoin('p.author', 'a')
                ->where('a.id = :id')
                ->setParameter('id', $author_id)
                ->getQuery()->getResult();
        return $result;
    }

    public function  findByTagId($tag_id){
        $result = $this->createQueryBuilder('p')
            ->select('p')
            ->innerJoin('p.tag', 'a')
            ->where('a.id = :id')
            ->setParameter('id', $tag_id)
            ->getQuery()->getResult();
        return $result;
    }

    public function findByCategoryId($category_id){
        $result = $this->createQueryBuilder('p')
            ->select('p')
            ->innerJoin('p.category', 'a')
            ->where('a.id = :id')
            ->setParameter('id', $category_id)
            ->getQuery()->getResult();
        return $result;
    }
}
